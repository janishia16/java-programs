/*Problem Description
Question â€“ :  Some prime numbers can be expressed as a sum of other consecutive prime numbers.

For example
5 = 2 + 3,
17 = 2 + 3 + 5 + 7,
41 = 2 + 3 + 5 + 7 + 11 + 13.
Your task is to find out how many prime numbers which satisfy this property are present in the range 3 to N subject to a constraint that summation should always start with number 2.
Write code to find out the number of prime numbers that satisfy the above-mentioned property in a given range.

Input Format: First line contains a number N

Output Format: Print the total number of all such prime numbers which are less than or equal to N.

Constraints: 2<N<=12,000,000,000

S.no	Input	Output	Comment
1	20	2	(Below 20 there are two such members; 5 and 17) 5=2+3 17=2+3+65+7
2	15	1	*/
---------------------------------------------------------

package program;
import java.util.ArrayList;
import java.util.Scanner;
public class p7 {
	public static boolean isPrime(int n)
	{
	        if (n == 0 || n == 1)
	            return false;
	        if (n == 2)
	            return true;
	        for (int i = 2; i * i <= n; i++) {
	            if (n % i == 0) 
	                return false;
	        }
	        return true; 
	}
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		int n=sc.nextInt();
		int cnt=0;
		ArrayList<Integer> arr=new ArrayList();
        for (int i =1;i<=n;i++) {
            if (isPrime(i))
            	arr.add(i);
        }
        System.out.println(arr);
        int i=1;
        int sum=arr.get(0);
        while(sum<n)
    	{
    		   sum+=arr.get(i);
    		   if(arr.contains(sum))
    			   cnt++;
    		   i++;
    	 }
    	 System.out.println(cnt);
     }
}
